{"version":3,"file":"node_modules/crypto-js/mode-ctr-gladman.js","names":["root","factory","undef","exports","module","require","define","amd","CryptoJS","this","mode","CTRGladman","lib","BlockCipherMode","extend","incWord","word","b1","b2","b3","Encryptor","processBlock","words","offset","cipher","_cipher","blockSize","iv","_iv","counter","_counter","slice","undefined","incCounter","keystream","encryptBlock","i","Decryptor"],"sources":["node_modules/crypto-js/mode-ctr-gladman.js"],"sourcesContent":[";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));"],"mappings":"CAAE,SAAUA,EAAMC,EAASC,GACH,iBAAZC,QAEVC,OAAOD,QAAUA,QAAUF,EAAQI,QAAQ,UAAWA,QAAQ,kBAEpC,mBAAXC,QAAyBA,OAAOC,IAE/CD,OAAO,CAAC,SAAU,iBAAkBL,GAIpCA,EAAQD,EAAKQ,SAEf,CAbC,CAaCC,MAAM,SAAUD;;;;;;AAoGjB,OA7FAA,EAASE,KAAKC,WAAc,WACxB,IAAIA,EAAaH,EAASI,IAAIC,gBAAgBC,SAEjD,SAASC,EAAQC,GAEhB,GAA8B,MAAxBA,GAAQ,GAAM,KAAgB,CACpC,IAAIC,EAAMD,GAAQ,GAAI,IAClBE,EAAMF,GAAQ,EAAG,IACjBG,EAAY,IAAPH,EAEE,MAAPC,GAEJA,EAAK,EACM,MAAPC,GAEHA,EAAK,EACM,MAAPC,EAEHA,EAAK,IAIHA,KAKDD,KAKDD,EAGFD,EAAO,EACPA,GAASC,GAAM,GACfD,GAASE,GAAM,EACfF,GAAQG,CACR,MAGAH,GAAS,GAAQ,GAEjB,OAAOA,CACR,CAYG,IAAII,EAAYT,EAAWS,UAAYT,EAAWG,OAAO,CACrDO,aAAc,SAAUC,EAAOC,GAE3B,IAAIC,EAASf,KAAKgB,QACdC,EAAYF,EAAOE,UACnBC,EAAKlB,KAAKmB,IACVC,EAAUpB,KAAKqB,SAGfH,IACAE,EAAUpB,KAAKqB,SAAWH,EAAGI,MAAM,GAGnCtB,KAAKmB,SAAMI,GAvB1B,SAAoBH,GAEwB,KAAtCA,EAAQ,GAAKd,EAAQc,EAAQ,OAGjCA,EAAQ,GAAKd,EAAQc,EAAQ,IAG/B,CAkBEI,CAAWJ,GAEX,IAAIK,EAAYL,EAAQE,MAAM,GACrBP,EAAOW,aAAaD,EAAW,GAG/B,IAAK,IAAIE,EAAI,EAAGA,EAAIV,EAAWU,IAC3Bd,EAAMC,EAASa,IAAMF,EAAUE,EAEvC,IAKJ,OAFAzB,EAAW0B,UAAYjB,EAEhBT,CACX,CAxF2B,GA6FpBH,EAASE,KAAKC,UAEtB","ignoreList":[]}