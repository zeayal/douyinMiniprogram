{"version":3,"file":"node_modules/crypto-js/pad-ansix923.js","names":["root","factory","undef","exports","module","require","define","amd","CryptoJS","this","pad","AnsiX923","data","blockSize","dataSigBytes","sigBytes","blockSizeBytes","nPaddingBytes","lastBytePos","clamp","words","unpad","Ansix923"],"sources":["node_modules/crypto-js/pad-ansix923.js"],"sourcesContent":[";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));"],"mappings":"CAAE,SAAUA,EAAMC,EAASC,GACH,iBAAZC,QAEVC,OAAOD,QAAUA,QAAUF,EAAQI,QAAQ,UAAWA,QAAQ,kBAEpC,mBAAXC,QAAyBA,OAAOC,IAE/CD,OAAO,CAAC,SAAU,iBAAkBL,GAIpCA,EAAQD,EAAKQ,SAEf,CAbC,CAaCC,MAAM,SAAUD,GAiCjB,OA5BAA,EAASE,IAAIC,SAAW,CACpBD,IAAK,SAAUE,EAAMC,GAEjB,IAAIC,EAAeF,EAAKG,SACpBC,EAA6B,EAAZH,EAGjBI,EAAgBD,EAAiBF,EAAeE,EAGhDE,EAAcJ,EAAeG,EAAgB,EAGjDL,EAAKO,QACLP,EAAKQ,MAAMF,IAAgB,IAAMD,GAAkB,GAAMC,EAAc,EAAK,EAC5EN,EAAKG,UAAYE,CACrB,EAEAI,MAAO,SAAUT,GAEb,IAAIK,EAAwD,IAAxCL,EAAKQ,MAAOR,EAAKG,SAAW,IAAO,GAGvDH,EAAKG,UAAYE,CACrB,GAIGT,EAASE,IAAIY,QAErB","ignoreList":[]}