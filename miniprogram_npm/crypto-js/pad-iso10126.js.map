{"version":3,"file":"node_modules/crypto-js/pad-iso10126.js","names":["root","factory","undef","exports","module","require","define","amd","CryptoJS","this","pad","Iso10126","data","blockSize","blockSizeBytes","nPaddingBytes","sigBytes","concat","lib","WordArray","random","create","unpad","words"],"sources":["node_modules/crypto-js/pad-iso10126.js"],"sourcesContent":[";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));"],"mappings":"CAAE,SAAUA,EAAMC,EAASC,GACH,iBAAZC,QAEVC,OAAOD,QAAUA,QAAUF,EAAQI,QAAQ,UAAWA,QAAQ,kBAEpC,mBAAXC,QAAyBA,OAAOC,IAE/CD,OAAO,CAAC,SAAU,iBAAkBL,GAIpCA,EAAQD,EAAKQ,SAEf,CAbC,CAaCC,MAAM,SAAUD,GA4BjB,OAvBAA,EAASE,IAAIC,SAAW,CACpBD,IAAK,SAAUE,EAAMC,GAEjB,IAAIC,EAA6B,EAAZD,EAGjBE,EAAgBD,EAAiBF,EAAKI,SAAWF,EAGrDF,EAAKK,OAAOT,EAASU,IAAIC,UAAUC,OAAOL,EAAgB,IACrDE,OAAOT,EAASU,IAAIC,UAAUE,OAAO,CAACN,GAAiB,IAAK,GACrE,EAEAO,MAAO,SAAUV,GAEb,IAAIG,EAAwD,IAAxCH,EAAKW,MAAOX,EAAKI,SAAW,IAAO,GAGvDJ,EAAKI,UAAYD,CACrB,GAIGP,EAASE,IAAIC,QAErB","ignoreList":[]}