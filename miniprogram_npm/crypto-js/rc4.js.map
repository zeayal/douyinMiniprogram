{"version":3,"file":"node_modules/crypto-js/rc4.js","names":["root","factory","undef","exports","module","require","define","amd","CryptoJS","this","C","StreamCipher","lib","C_algo","algo","RC4","extend","_doReset","key","_key","keyWords","words","keySigBytes","sigBytes","S","_S","i","j","keyByteIndex","keyByte","t","_i","_j","_doProcessBlock","M","offset","generateKeystreamWord","call","keySize","ivSize","keystreamWord","n","_createHelper","RC4Drop","cfg","drop"],"sources":["node_modules/crypto-js/rc4.js"],"sourcesContent":[";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));"],"mappings":"CAAE,SAAUA,EAAMC,EAASC,GACH,iBAAZC,QAEVC,OAAOD,QAAUA,QAAUF,EAAQI,QAAQ,UAAWA,QAAQ,gBAAiBA,QAAQ,SAAUA,QAAQ,YAAaA,QAAQ,kBAEpG,mBAAXC,QAAyBA,OAAOC,IAE/CD,OAAO,CAAC,SAAU,eAAgB,QAAS,WAAY,iBAAkBL,GAIzEA,EAAQD,EAAKQ,SAEf,CAbC,CAaCC,MAAM,SAAUD,GA2HjB,OAzHC,WAEG,IAAIE,EAAIF,EAEJG,EADQD,EAAEE,IACWD,aACrBE,EAASH,EAAEI,KAKXC,EAAMF,EAAOE,IAAMJ,EAAaK,OAAO,CACvCC,SAAU,WAQN,IANA,IAAIC,EAAMT,KAAKU,KACXC,EAAWF,EAAIG,MACfC,EAAcJ,EAAIK,SAGlBC,EAAIf,KAAKgB,GAAK,GACTC,EAAI,EAAGA,EAAI,IAAKA,IACrBF,EAAEE,GAAKA,EAIFA,EAAI,EAAb,IAAK,IAAWC,EAAI,EAAGD,EAAI,IAAKA,IAAK,CACjC,IAAIE,EAAeF,EAAIJ,EACnBO,EAAWT,EAASQ,IAAiB,KAAQ,GAAMA,EAAe,EAAK,EAAM,IAEjFD,GAAKA,EAAIH,EAAEE,GAAKG,GAAW,IAG3B,IAAIC,EAAIN,EAAEE,GACVF,EAAEE,GAAKF,EAAEG,GACTH,EAAEG,GAAKG,CACX,CAGArB,KAAKsB,GAAKtB,KAAKuB,GAAK,CACxB,EAEAC,gBAAiB,SAAUC,EAAGC,GAC1BD,EAAEC,IAAWC,EAAsBC,KAAK5B,KAC5C,EAEA6B,QAAS,EAETC,OAAQ,IAGZ,SAASH,IAQL,IANA,IAAIZ,EAAIf,KAAKgB,GACTC,EAAIjB,KAAKsB,GACTJ,EAAIlB,KAAKuB,GAGTQ,EAAgB,EACXC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExBd,GAAKA,EAAIH,EADTE,GAAKA,EAAI,GAAK,MACG,IAGjB,IAAII,EAAIN,EAAEE,GACVF,EAAEE,GAAKF,EAAEG,GACTH,EAAEG,GAAKG,EAEPU,GAAiBhB,GAAGA,EAAEE,GAAKF,EAAEG,IAAM,MAAS,GAAS,EAAJc,CACrD,CAMA,OAHAhC,KAAKsB,GAAKL,EACVjB,KAAKuB,GAAKL,EAEHa,CACX,CAUA9B,EAAEK,IAAMJ,EAAa+B,cAAc3B,GAKnC,IAAI4B,EAAU9B,EAAO8B,QAAU5B,EAAIC,OAAO,CAMtC4B,IAAK7B,EAAI6B,IAAI5B,OAAO,CAChB6B,KAAM,MAGV5B,SAAU,WACNF,EAAIE,SAASoB,KAAK5B,MAGlB,IAAK,IAAIiB,EAAIjB,KAAKmC,IAAIC,KAAMnB,EAAI,EAAGA,IAC/BU,EAAsBC,KAAK5B,KAEnC,IAWJC,EAAEiC,QAAUhC,EAAa+B,cAAcC,EAC3C,CAtHA,GAyHOnC,EAASO,GAEjB","ignoreList":[]}