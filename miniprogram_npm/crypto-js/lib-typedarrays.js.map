{"version":3,"file":"node_modules/crypto-js/lib-typedarrays.js","names":["root","factory","exports","module","require","define","amd","CryptoJS","this","ArrayBuffer","WordArray","lib","superInit","init","subInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","words","i","call","apply","arguments","prototype"],"sources":["node_modules/crypto-js/lib-typedarrays.js"],"sourcesContent":[";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));"],"mappings":"CAAE,SAAUA,EAAMC,GACM,iBAAZC,QAEVC,OAAOD,QAAUA,QAAUD,EAAQG,QAAQ,WAEjB,mBAAXC,QAAyBA,OAAOC,IAE/CD,OAAO,CAAC,UAAWJ,GAInBA,EAAQD,EAAKO,SAEf,CAbC,CAaCC,MAAM,SAAUD,GA4DjB,OA1DC,WAEG,GAA0B,mBAAfE,YAAX,CAKA,IAEIC,EAFIH,EACMI,IACQD,UAGlBE,EAAYF,EAAUG,KAGtBC,EAAUJ,EAAUG,KAAO,SAAUE,GAqBrC,GAnBIA,aAAsBN,cACtBM,EAAa,IAAIC,WAAWD,KAK5BA,aAAsBE,WACQ,oBAAtBC,mBAAqCH,aAAsBG,mBACnEH,aAAsBI,YACtBJ,aAAsBK,aACtBL,aAAsBM,YACtBN,aAAsBO,aACtBP,aAAsBQ,cACtBR,aAAsBS,gBAEtBT,EAAa,IAAIC,WAAWD,EAAWU,OAAQV,EAAWW,WAAYX,EAAWY,aAIjFZ,aAAsBC,WAAY,CAMlC,IAJA,IAAIY,EAAuBb,EAAWY,WAGlCE,EAAQ,GACHC,EAAI,EAAGA,EAAIF,EAAsBE,IACtCD,EAAMC,IAAM,IAAMf,EAAWe,IAAO,GAAMA,EAAI,EAAK,EAIvDlB,EAAUmB,KAAKvB,KAAMqB,EAAOD,EAChC,MAEIhB,EAAUoB,MAAMxB,KAAMyB,UAE9B,EAEAnB,EAAQoB,UAAYxB,CAlDpB,CAmDJ,CAvDA,GA0DOH,EAASI,IAAID,SAErB","ignoreList":[]}