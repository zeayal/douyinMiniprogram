"use strict";const MAXBITS=15,ENOUGH_LENS=852,ENOUGH_DISTS=592,CODES=0,LENS=1,DISTS=2,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inflate_table=(r,e,t,n,i,f,l,o)=>{const a=o.bits;let s,b,u,S,U,w,A=0,d=0,y=0,x=0,E=0,c=0,N=0,_=0,D=0,I=0,O=null;const T=new Uint16Array(16),G=new Uint16Array(16);let H,L,h,k=null;for(A=0;A<=15;A++)T[A]=0;for(d=0;d<n;d++)T[e[t+d]]++;for(E=a,x=15;x>=1&&0===T[x];x--);if(E>x&&(E=x),0===x)return i[f++]=20971520,i[f++]=20971520,o.bits=1,0;for(y=1;y<x&&0===T[y];y++);for(E<y&&(E=y),_=1,A=1;A<=15;A++)if(_<<=1,_-=T[A],_<0)return-1;if(_>0&&(0===r||1!==x))return-1;for(G[1]=0,A=1;A<15;A++)G[A+1]=G[A]+T[A];for(d=0;d<n;d++)0!==e[t+d]&&(l[G[e[t+d]]++]=d);if(0===r?(O=k=l,w=20):1===r?(O=lbase,k=lext,w=257):(O=dbase,k=dext,w=0),I=0,d=0,A=y,U=f,c=E,N=0,u=-1,D=1<<E,S=D-1,1===r&&D>852||2===r&&D>592)return 1;for(;;){H=A-N,l[d]+1<w?(L=0,h=l[d]):l[d]>=w?(L=k[l[d]-w],h=O[l[d]-w]):(L=96,h=0),s=1<<A-N,b=1<<c,y=b;do{b-=s,i[U+(I>>N)+b]=H<<24|L<<16|h|0}while(0!==b);for(s=1<<A-1;I&s;)s>>=1;if(0!==s?(I&=s-1,I+=s):I=0,d++,0==--T[A]){if(A===x)break;A=e[t+l[d]]}if(A>E&&(I&S)!==u){for(0===N&&(N=E),U+=y,c=A-N,_=1<<c;c+N<x&&(_-=T[c+N],!(_<=0));)c++,_<<=1;if(D+=1<<c,1===r&&D>852||2===r&&D>592)return 1;u=I&S,i[u]=E<<24|c<<16|U-f|0}}return 0!==I&&(i[U+I]=A-N<<24|64<<16|0),o.bits=E,0};module.exports=inflate_table;
//# sourceMappingURL=inftrees.js.map