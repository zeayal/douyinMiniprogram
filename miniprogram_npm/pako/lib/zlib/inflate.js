"use strict";const adler32=require("./adler32"),crc32=require("./crc32"),inflate_fast=require("./inffast"),inflate_table=require("./inftrees"),CODES=0,LENS=1,DISTS=2,{Z_FINISH:Z_FINISH,Z_BLOCK:Z_BLOCK,Z_TREES:Z_TREES,Z_OK:Z_OK,Z_STREAM_END:Z_STREAM_END,Z_NEED_DICT:Z_NEED_DICT,Z_STREAM_ERROR:Z_STREAM_ERROR,Z_DATA_ERROR:Z_DATA_ERROR,Z_MEM_ERROR:Z_MEM_ERROR,Z_BUF_ERROR:Z_BUF_ERROR,Z_DEFLATED:Z_DEFLATED}=require("./constants"),HEAD=16180,FLAGS=16181,TIME=16182,OS=16183,EXLEN=16184,EXTRA=16185,NAME=16186,COMMENT=16187,HCRC=16188,DICTID=16189,DICT=16190,TYPE=16191,TYPEDO=16192,STORED=16193,COPY_=16194,COPY=16195,TABLE=16196,LENLENS=16197,CODELENS=16198,LEN_=16199,LEN=16200,LENEXT=16201,DIST=16202,DISTEXT=16203,MATCH=16204,LIT=16205,CHECK=16206,LENGTH=16207,DONE=16208,BAD=16209,MEM=16210,SYNC=16211,ENOUGH_LENS=852,ENOUGH_DISTS=592,MAX_WBITS=15,DEF_WBITS=15,zswap32=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function InflateState(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const inflateStateCheck=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<HEAD||t.mode>SYNC?1:0},inflateResetKeep=e=>{if(inflateStateCheck(e))return Z_STREAM_ERROR;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=HEAD,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,Z_OK},inflateReset=e=>{if(inflateStateCheck(e))return Z_STREAM_ERROR;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,inflateResetKeep(e)},inflateReset2=(e,t)=>{let a;if(inflateStateCheck(e))return Z_STREAM_ERROR;const i=e.state;return t<0?(a=0,t=-t):(a=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?Z_STREAM_ERROR:(null!==i.window&&i.wbits!==t&&(i.window=null),i.wrap=a,i.wbits=t,inflateReset(e))},inflateInit2=(e,t)=>{if(!e)return Z_STREAM_ERROR;const a=new InflateState;e.state=a,a.strm=e,a.window=null,a.mode=HEAD;const i=inflateReset2(e,t);return i!==Z_OK&&(e.state=null),i},inflateInit=e=>inflateInit2(e,15);let lenfix,distfix,virgin=!0;const fixedtables=e=>{if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(inflate_table(1,e.lens,0,288,lenfix,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;inflate_table(2,e.lens,0,32,distfix,0,e.work,{bits:5}),virgin=!1}e.lencode=lenfix,e.lenbits=9,e.distcode=distfix,e.distbits=5},updatewindow=(e,t,a,i)=>{let n;const s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(t.subarray(a-s.wsize,a),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>i&&(n=i),s.window.set(t.subarray(a-i,a-i+n),s.wnext),(i-=n)?(s.window.set(t.subarray(a-i,a),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0},inflate=(e,t)=>{let a,i,n,s,r,l,o,d,f,c,h,b,_,k,E,m,w,R,u,g,A,x,D=0;const T=new Uint8Array(4);let S,p;const Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(inflateStateCheck(e)||!e.output||!e.input&&0!==e.avail_in)return Z_STREAM_ERROR;a=e.state,a.mode===TYPE&&(a.mode=16192),r=e.next_out,n=e.output,o=e.avail_out,s=e.next_in,i=e.input,l=e.avail_in,d=a.hold,f=a.bits,c=l,h=o,x=Z_OK;e:for(;;)switch(a.mode){case HEAD:if(0===a.wrap){a.mode=16192;break}for(;f<16;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if(2&a.wrap&&35615===d){0===a.wbits&&(a.wbits=15),a.check=0,T[0]=255&d,T[1]=d>>>8&255,a.check=crc32(a.check,T,2,0),d=0,f=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&d)<<8)+(d>>8))%31){e.msg="incorrect header check",a.mode=BAD;break}if((15&d)!==Z_DEFLATED){e.msg="unknown compression method",a.mode=BAD;break}if(d>>>=4,f-=4,A=8+(15&d),0===a.wbits&&(a.wbits=A),A>15||A>a.wbits){e.msg="invalid window size",a.mode=BAD;break}a.dmax=1<<a.wbits,a.flags=0,e.adler=a.check=1,a.mode=512&d?16189:TYPE,d=0,f=0;break;case 16181:for(;f<16;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if(a.flags=d,(255&a.flags)!==Z_DEFLATED){e.msg="unknown compression method",a.mode=BAD;break}if(57344&a.flags){e.msg="unknown header flags set",a.mode=BAD;break}a.head&&(a.head.text=d>>8&1),512&a.flags&&4&a.wrap&&(T[0]=255&d,T[1]=d>>>8&255,a.check=crc32(a.check,T,2,0)),d=0,f=0,a.mode=TIME;case TIME:for(;f<32;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}a.head&&(a.head.time=d),512&a.flags&&4&a.wrap&&(T[0]=255&d,T[1]=d>>>8&255,T[2]=d>>>16&255,T[3]=d>>>24&255,a.check=crc32(a.check,T,4,0)),d=0,f=0,a.mode=OS;case OS:for(;f<16;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}a.head&&(a.head.xflags=255&d,a.head.os=d>>8),512&a.flags&&4&a.wrap&&(T[0]=255&d,T[1]=d>>>8&255,a.check=crc32(a.check,T,2,0)),d=0,f=0,a.mode=16184;case 16184:if(1024&a.flags){for(;f<16;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}a.length=d,a.head&&(a.head.extra_len=d),512&a.flags&&4&a.wrap&&(T[0]=255&d,T[1]=d>>>8&255,a.check=crc32(a.check,T,2,0)),d=0,f=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(b=a.length,b>l&&(b=l),b&&(a.head&&(A=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(s,s+b),A)),512&a.flags&&4&a.wrap&&(a.check=crc32(a.check,i,b,s)),l-=b,s+=b,a.length-=b),a.length))break e;a.length=0,a.mode=NAME;case NAME:if(2048&a.flags){if(0===l)break e;b=0;do{A=i[s+b++],a.head&&A&&a.length<65536&&(a.head.name+=String.fromCharCode(A))}while(A&&b<l);if(512&a.flags&&4&a.wrap&&(a.check=crc32(a.check,i,b,s)),l-=b,s+=b,A)break e}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===l)break e;b=0;do{A=i[s+b++],a.head&&A&&a.length<65536&&(a.head.comment+=String.fromCharCode(A))}while(A&&b<l);if(512&a.flags&&4&a.wrap&&(a.check=crc32(a.check,i,b,s)),l-=b,s+=b,A)break e}else a.head&&(a.head.comment=null);a.mode=HCRC;case HCRC:if(512&a.flags){for(;f<16;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if(4&a.wrap&&d!==(65535&a.check)){e.msg="header crc mismatch",a.mode=BAD;break}d=0,f=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),e.adler=a.check=0,a.mode=TYPE;break;case 16189:for(;f<32;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}e.adler=a.check=zswap32(d),d=0,f=0,a.mode=DICT;case DICT:if(0===a.havedict)return e.next_out=r,e.avail_out=o,e.next_in=s,e.avail_in=l,a.hold=d,a.bits=f,Z_NEED_DICT;e.adler=a.check=1,a.mode=TYPE;case TYPE:if(t===Z_BLOCK||t===Z_TREES)break e;case 16192:if(a.last){d>>>=7&f,f-=7&f,a.mode=16206;break}for(;f<3;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}switch(a.last=1&d,d>>>=1,f-=1,3&d){case 0:a.mode=16193;break;case 1:if(fixedtables(a),a.mode=LEN_,t===Z_TREES){d>>>=2,f-=2;break e}break;case 2:a.mode=16196;break;case 3:e.msg="invalid block type",a.mode=BAD}d>>>=2,f-=2;break;case 16193:for(d>>>=7&f,f-=7&f;f<32;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if((65535&d)!=(d>>>16^65535)){e.msg="invalid stored block lengths",a.mode=BAD;break}if(a.length=65535&d,d=0,f=0,a.mode=16194,t===Z_TREES)break e;case 16194:a.mode=COPY;case COPY:if(b=a.length,b){if(b>l&&(b=l),b>o&&(b=o),0===b)break e;n.set(i.subarray(s,s+b),r),l-=b,s+=b,o-=b,r+=b,a.length-=b;break}a.mode=TYPE;break;case 16196:for(;f<14;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if(a.nlen=257+(31&d),d>>>=5,f-=5,a.ndist=1+(31&d),d>>>=5,f-=5,a.ncode=4+(15&d),d>>>=4,f-=4,a.nlen>286||a.ndist>30){e.msg="too many length or distance symbols",a.mode=BAD;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;f<3;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}a.lens[Z[a.have++]]=7&d,d>>>=3,f-=3}for(;a.have<19;)a.lens[Z[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,S={bits:a.lenbits},x=inflate_table(0,a.lens,0,19,a.lencode,0,a.work,S),a.lenbits=S.bits,x){e.msg="invalid code lengths set",a.mode=BAD;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;D=a.lencode[d&(1<<a.lenbits)-1],E=D>>>24,m=D>>>16&255,w=65535&D,!(E<=f);){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if(w<16)d>>>=E,f-=E,a.lens[a.have++]=w;else{if(16===w){for(p=E+2;f<p;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if(d>>>=E,f-=E,0===a.have){e.msg="invalid bit length repeat",a.mode=BAD;break}A=a.lens[a.have-1],b=3+(3&d),d>>>=2,f-=2}else if(17===w){for(p=E+3;f<p;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}d>>>=E,f-=E,A=0,b=3+(7&d),d>>>=3,f-=3}else{for(p=E+7;f<p;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}d>>>=E,f-=E,A=0,b=11+(127&d),d>>>=7,f-=7}if(a.have+b>a.nlen+a.ndist){e.msg="invalid bit length repeat",a.mode=BAD;break}for(;b--;)a.lens[a.have++]=A}}if(a.mode===BAD)break;if(0===a.lens[256]){e.msg="invalid code -- missing end-of-block",a.mode=BAD;break}if(a.lenbits=9,S={bits:a.lenbits},x=inflate_table(1,a.lens,0,a.nlen,a.lencode,0,a.work,S),a.lenbits=S.bits,x){e.msg="invalid literal/lengths set",a.mode=BAD;break}if(a.distbits=6,a.distcode=a.distdyn,S={bits:a.distbits},x=inflate_table(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,S),a.distbits=S.bits,x){e.msg="invalid distances set",a.mode=BAD;break}if(a.mode=LEN_,t===Z_TREES)break e;case LEN_:a.mode=LEN;case LEN:if(l>=6&&o>=258){e.next_out=r,e.avail_out=o,e.next_in=s,e.avail_in=l,a.hold=d,a.bits=f,inflate_fast(e,h),r=e.next_out,n=e.output,o=e.avail_out,s=e.next_in,i=e.input,l=e.avail_in,d=a.hold,f=a.bits,a.mode===TYPE&&(a.back=-1);break}for(a.back=0;D=a.lencode[d&(1<<a.lenbits)-1],E=D>>>24,m=D>>>16&255,w=65535&D,!(E<=f);){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if(m&&0==(240&m)){for(R=E,u=m,g=w;D=a.lencode[g+((d&(1<<R+u)-1)>>R)],E=D>>>24,m=D>>>16&255,w=65535&D,!(R+E<=f);){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}d>>>=R,f-=R,a.back+=R}if(d>>>=E,f-=E,a.back+=E,a.length=w,0===m){a.mode=LIT;break}if(32&m){a.back=-1,a.mode=TYPE;break}if(64&m){e.msg="invalid literal/length code",a.mode=BAD;break}a.extra=15&m,a.mode=16201;case 16201:if(a.extra){for(p=a.extra;f<p;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}a.length+=d&(1<<a.extra)-1,d>>>=a.extra,f-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=DIST;case DIST:for(;D=a.distcode[d&(1<<a.distbits)-1],E=D>>>24,m=D>>>16&255,w=65535&D,!(E<=f);){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if(0==(240&m)){for(R=E,u=m,g=w;D=a.distcode[g+((d&(1<<R+u)-1)>>R)],E=D>>>24,m=D>>>16&255,w=65535&D,!(R+E<=f);){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}d>>>=R,f-=R,a.back+=R}if(d>>>=E,f-=E,a.back+=E,64&m){e.msg="invalid distance code",a.mode=BAD;break}a.offset=w,a.extra=15&m,a.mode=16203;case 16203:if(a.extra){for(p=a.extra;f<p;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}a.offset+=d&(1<<a.extra)-1,d>>>=a.extra,f-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){e.msg="invalid distance too far back",a.mode=BAD;break}a.mode=16204;case 16204:if(0===o)break e;if(b=h-o,a.offset>b){if(b=a.offset-b,b>a.whave&&a.sane){e.msg="invalid distance too far back",a.mode=BAD;break}b>a.wnext?(b-=a.wnext,_=a.wsize-b):_=a.wnext-b,b>a.length&&(b=a.length),k=a.window}else k=n,_=r-a.offset,b=a.length;b>o&&(b=o),o-=b,a.length-=b;do{n[r++]=k[_++]}while(--b);0===a.length&&(a.mode=LEN);break;case LIT:if(0===o)break e;n[r++]=a.length,o--,a.mode=LEN;break;case 16206:if(a.wrap){for(;f<32;){if(0===l)break e;l--,d|=i[s++]<<f,f+=8}if(h-=o,e.total_out+=h,a.total+=h,4&a.wrap&&h&&(e.adler=a.check=a.flags?crc32(a.check,n,h,r-h):adler32(a.check,n,h,r-h)),h=o,4&a.wrap&&(a.flags?d:zswap32(d))!==a.check){e.msg="incorrect data check",a.mode=BAD;break}d=0,f=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;f<32;){if(0===l)break e;l--,d+=i[s++]<<f,f+=8}if(4&a.wrap&&d!==(4294967295&a.total)){e.msg="incorrect length check",a.mode=BAD;break}d=0,f=0}a.mode=DONE;case DONE:x=Z_STREAM_END;break e;case BAD:x=Z_DATA_ERROR;break e;case MEM:return Z_MEM_ERROR;default:return Z_STREAM_ERROR}return e.next_out=r,e.avail_out=o,e.next_in=s,e.avail_in=l,a.hold=d,a.bits=f,(a.wsize||h!==e.avail_out&&a.mode<BAD&&(a.mode<16206||t!==Z_FINISH))&&updatewindow(e,e.output,e.next_out,h-e.avail_out)?(a.mode=MEM,Z_MEM_ERROR):(c-=e.avail_in,h-=e.avail_out,e.total_in+=c,e.total_out+=h,a.total+=h,4&a.wrap&&h&&(e.adler=a.check=a.flags?crc32(a.check,n,h,e.next_out-h):adler32(a.check,n,h,e.next_out-h)),e.data_type=a.bits+(a.last?64:0)+(a.mode===TYPE?128:0)+(a.mode===LEN_||16194===a.mode?256:0),(0===c&&0===h||t===Z_FINISH)&&x===Z_OK&&(x=Z_BUF_ERROR),x)},inflateEnd=e=>{if(inflateStateCheck(e))return Z_STREAM_ERROR;let t=e.state;return t.window&&(t.window=null),e.state=null,Z_OK},inflateGetHeader=(e,t)=>{if(inflateStateCheck(e))return Z_STREAM_ERROR;const a=e.state;return 0==(2&a.wrap)?Z_STREAM_ERROR:(a.head=t,t.done=!1,Z_OK)},inflateSetDictionary=(e,t)=>{const a=t.length;let i,n,s;return inflateStateCheck(e)?Z_STREAM_ERROR:(i=e.state,0!==i.wrap&&i.mode!==DICT?Z_STREAM_ERROR:i.mode===DICT&&(n=1,n=adler32(n,t,a,0),n!==i.check)?Z_DATA_ERROR:(s=updatewindow(e,t,a,a),s?(i.mode=MEM,Z_MEM_ERROR):(i.havedict=1,Z_OK)))};module.exports.inflateReset=inflateReset,module.exports.inflateReset2=inflateReset2,module.exports.inflateResetKeep=inflateResetKeep,module.exports.inflateInit=inflateInit,module.exports.inflateInit2=inflateInit2,module.exports.inflate=inflate,module.exports.inflateEnd=inflateEnd,module.exports.inflateGetHeader=inflateGetHeader,module.exports.inflateSetDictionary=inflateSetDictionary,module.exports.inflateInfo="pako inflate (from Nodeca project)";
//# sourceMappingURL=inflate.js.map