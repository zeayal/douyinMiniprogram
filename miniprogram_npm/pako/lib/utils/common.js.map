{"version":3,"file":"node_modules/pako/lib/utils/common.js","names":["_has","obj","key","Object","prototype","hasOwnProperty","call","module","exports","assign","sources","Array","slice","arguments","length","source","shift","TypeError","p","flattenChunks","chunks","len","i","l","result","Uint8Array","pos","chunk","set"],"sources":["node_modules/pako/lib/utils/common.js"],"sourcesContent":["'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n"],"mappings":"AAAA,aAGA,MAAMA,KAAO,CAACC,EAAKC,IACVC,OAAOC,UAAUC,eAAeC,KAAKL,EAAKC,GAGnDK,OAAOC,QAAQC,OAAS,SAAUR,GAChC,MAAMS,EAAUC,MAAMP,UAAUQ,MAAMN,KAAKO,UAAW,GACtD,KAAOH,EAAQI,QAAQ,CACrB,MAAMC,EAASL,EAAQM,QACvB,GAAKD,EAAL,CAEA,GAAsB,iBAAXA,EACT,MAAM,IAAIE,UAAUF,EAAS,sBAG/B,IAAK,MAAMG,KAAKH,EACVf,KAAKe,EAAQG,KACfjB,EAAIiB,GAAKH,EAAOG,GARK,CAW3B,CAEA,OAAOjB,CACT,EAIAM,OAAOC,QAAQW,cAAiBC,IAE9B,IAAIC,EAAM,EAEV,IAAK,IAAIC,EAAI,EAAGC,EAAIH,EAAON,OAAQQ,EAAIC,EAAGD,IACxCD,GAAOD,EAAOE,GAAGR,OAInB,MAAMU,EAAS,IAAIC,WAAWJ,GAE9B,IAAK,IAAIC,EAAI,EAAGI,EAAM,EAAGH,EAAIH,EAAON,OAAQQ,EAAIC,EAAGD,IAAK,CACtD,IAAIK,EAAQP,EAAOE,GACnBE,EAAOI,IAAID,EAAOD,GAClBA,GAAOC,EAAMb,MACf,CAEA,OAAOU,CAAM","ignoreList":[]}